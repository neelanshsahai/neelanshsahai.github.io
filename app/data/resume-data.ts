import { GitHubIcon, LinkedInIcon, XIcon } from "../components/icons";

export const RESUME_DATA = {
  name: "Neelansh Sahai",
  location: "Bengaluru, India",

  about:
    "A Senior Software Engineer with 6 years of experience, including 4+ years at Google, where I've helped shape core Android features like Passkeys, Picture-in-Picture, and Per-App Language Preferences. My expertise lies in Kotlin, Jetpack Compose, MVVM, and scalable architecture, with a strong focus on building clean, performant, and maintainable applications. I've led teams, modernized legacy codebases, and delivered end-to-end solutions in remote-first environments. I'm also inclined towards the field of Frontend Development using Next, React and TypeScript.",
  summary:
    "As a Software Engineer with a background in Android development, I have a strong foundation in building scalable and maintainable applications. I am passionate about solving complex problems and continuously learning new technologies. My experience includes working with Kotlin, Java, Jetpack Compose, MVVM architecture, and various Android frameworks. I have a keen interest in exploring the latest advancements in Android development and contributing to open-source projects. Not limited to Android, I am also inclined towards the field of Frontend Development. I am always eager to take on new challenges and expand my skill set.",
  avatarUrl: "./NeelanshProfilePic.jpg",

  contact: {
    email: "96shubh@gmail.com",
    tel: "+91 8318741607",
    social: [
      {
        name: "GitHub",
        url: "https://github.com/neelanshsahai",
        icon: GitHubIcon,
      },
      {
        name: "LinkedIn",
        url: "https://www.linkedin.com/in/neelanshsahai/",
        icon: LinkedInIcon,
      },
      {
        name: "X",
        url: "https://x.com/NeelanshSahai",
        icon: XIcon,
      },
    ],
  },
  education: [
    {
      school: "Indian Institute of Information Technology, Vadodara",
      degree: "Bachelor's of Technology",
      description: "Computer Science and Engineering",
      start: "Aug 2015",
      end: "May 2019",
      certificate: false,
    },
    {
      school: "Udemy",
      degree: "State of the art Android App Development in Kotlin",
      description: "Modern Android Development with Kotlin, Dependency Injection, MVVM, Coroutines, RoomDB, Retrofit, Firebase, and more.",
      start: "Mar 2020",
      end: "Jul 2020",
      certificate: true,
    },
    {
      school: "Udemy",
      degree: "Dependency Injection in Android with Dagger and Hilt",
      description: "Specific deep dive into the concepts of Dependency Injection and how dependency graphs are built behind the scenes.",
      start: "Oct 2024",
      end: "Nov 2024",
      certificate: true,
    },
    {
      school: "Udemy",
      degree: "(Jetpack, Architecture & More) Advanced Android Bootcamp",
      description: "Deep dive into the concepts of Jetpack, Architecture Components and other best practices related to architecture.",
      start: "Nov 2024",
      end: "Dec 2024",
      certificate: true,
    },
    {
      school: "Udemy",
      degree: "Android MVVM Architecture complete course",
      description: "More in depth knowledge of MVVM architecture and how to implement it in Android.",
      start: "Dec 2024",
      end: "Dec 2024",
      certificate: true,
    },
    {
      school: "Udemy",
      degree: "React - The Complete Guide 2025 (incl. Next.js, Redux)",
      description: "A guide on frontend development using React, Next.js, Redux, and TypeScript.",
      start: "Feb 2025",
      end: "present",
      certificate: true,
    },
    {
      school: "Udacity",
      degree: "Deep Learning Nanodegree",
      description: "A detailed course for Deep Learning, covering CNNs, RNNs, GANs, and more.",
      start: "May 2018",
      end: "Nov 2018",
      certificate: true,
    },
  ],
  skills: [
    "Kotlin",
    "Java",
    "Android",
    "Gradle",
    "Jetpack Compose",
    "Firebase",
    "MVVM",
    "Coroutines",
    "Dagger-Hilt",
    "Retrofit",
    "RoomDB",
    "Python",
    "Deep Learning",
    "Javascript",
    "React.js",
    "Next.js",
    "TypeScript",
    "C++",
    "C",
    "Git",
    "CI/CD",
  ],

  projects: [
    {
      title: "Nutrak",
      techStack: ["Android", "Kotlin", "Jetpack Compose"],
      shortDescription: "UI module of a nutrition tracking app",
      description: "This project was built in a short span of 5 days. This project is a good showcase of my skills in Jetpqack Compose, MVVM architecture, Coroutines, Custom UI elements, Navigation Compose, Animations in Jetpack Compose, and other UI centric tools and technologies. This project also showcases a very bsic level of MVVM architecture structuring (as this project doesn't hold the business logic or any data layer).",
      link: {
        label: "github.com/neelanshsahai",
        href: "https://github.com/neelanshsahai/Nutrak",
      },
    },
    {
      title: "Now In Android",
      techStack: ["Android", "Kotlin", "MVVM", "Clean Architecture"],
      description: "Contributed to this project as a part of my work at Google. Now In Android app is a sample app that showcases the latest Android features and best practices and is mix of both developer facing as well as user facing sample app. This project was built for it to be a milestone for developers on understanding how to implement certain features in their apps the right way.",
      shortDescription: "A sample app that showcases the latest Android features and best practices.",
      link: {
        label: "github.com/neelanshsahai",
        href: "https://github.com/android/socialite",
      },
    },
    {
      title: "Socialite",
      techStack: ["Android", "Kotlin", "Jetpack Compose"],
      shortDescription: "This sample app is a consolidation of all the latest SysUI features and best practices for Android.",
      description:
        " Contributed to this project as a part of my work at Google. Socialite is a simple chat application that was built to showcase implementation of the latest Android SysUI features like PiP, EdgeToEdge, implementation of CameraX libraries, etc. This project is a good sample app for developers who want to implement the latest SysUI features in their apps.",
      link: {
        label: "github.com",
        href: "https://github.com/ysahih/inception",
      },
    },
    {
      title: "RiderApp",
      techStack: ["Android", "Kotlin", "Java", "Views"],
      shortDescription: "This project is a logistics and supply chain management app for the major clients.",
      description:
        "Contributed to this project as a part of my work at Shipsy. Worked on app optimizations, publishing the app on playstore, auto update, printing using a bluetooth printer, and many other features. There were numerous tasks and features that were my responsibility to implement and maintain from planning till the deployment. Worked a lot around the optimizations, ofiscations, apk size reduction, refactoring, and migrations. Worked on hard skills like Dagger-2, RxJava, Coroutines, Retrofit, RoomDB, Firebase, and many other Android frameworks and libraries.",
      link: {
        label: "playstore",
        href: "https://play.google.com/store/apps/details?id=io.shipsy.fieldops&hl=en_IN",
      },
    },
    {
      title: "Vehicle Counter App",
      techStack: ["Python", "Java", "Views", "TensorflowLite", "YoloV3"],
      shortDescription: "The idea was to count the number of vehicles passing by from a live camera feed.",
      description:
        "Created this app from scratch as a part of a 6 months internship at Siemens. This app was built to detect and track objects in real time using the camera feed of the device. The idea was to count the number of vehicles passing by from a live camera feed. The app was built using Java and Views, and used YoloV3 model as a starting point, retrained the fully connected layers of the model only on vehicle data. This style transfer mechanism was used to increase the accuracy of the model. Converted the model to a protobuf file and used it in the app.",
    },
    {
      title: "Rover - 8th Sense",
      techStack: ["Java", "Views", "Firebase", "Activity Recognition API"],
      shortDescription: "The idea was to capture the driving behaviour of drivers and assess it using a scoring system.",
      description: 
        "Created this app from scratch as a part of a 2 months internship at Digital Impact Square. This app was built to capture the driving behaviour of drivers and assess it using a scoring system. The app was supposed to capture the speed, acceleration, braking, and other parameters of the driver and then calculate a score based on these parameters. The app captured the driving behaviour by using Google's Activity Recognition API and the device's sensor data (accelerometer, gyroscope, etc.). Events like sudden acceleration, sudden braking, and sharp turns were captured using this sensor data.",
    },
  ],

  experience: [
    {
      company: "Google",
      position: "Senior Software Engineer (Android)",
      logo: 'https://cdn1.iconfinder.com/data/icons/google-s-logo/150/Google_Icons-09-512.png',
      location: "Bengaluru, India",
      startDate: "Oct 2021",
      endDate: "Present",
      description:
        "Working on developer facing android sample projects such as NowInAndroid, Socialite, PlatformSamples as well as a few Android OS features, focusing on building modular apps, using best state of the art tools and technologies and following the M.A.D. (Modern Android Development) best practices for architecture and UI. Majorly worked on Jetpack Compose, Coroutines, Flows, and Dagger-Hilt, etc.",
      skills: [
        "Kotlin",
        "Jetpack Compose",
        "MVVM",
        "Dagger-Hilt",
        "Coroutines",
        "Flows",
        "Navigation Compose",
        "RoomDB",
        "CameraX",
        "Media3",
        "Clean Archtiecture",
      ],
      achievements: [
        "Contributed towards some important Android OS level features consecutively for 4 dessert releases, like Per-App Language Preferences (based on Localization and Internationalization) in Android 13, Picture-In-Picture (Based on System UI) updates in Android 14, and Restore Credentials (Based on Passkeys and Identity) in Android 15 and 16.",
        "Worked on samples like NowInAndroid, Socialite, Platform Samples, WearOS Samples, and Health Samples to implement the latest Android features and refactor legacy code to follow the latest best practices.",
        "Mentored junior developers, and helped them complete their tasks by helping them define clear set of goals and Code Reviews. Helped them with their onboarding process and provided them with the necessary resources to get started.",
      ],
    },
    {
      company: "Grab",
      position: "Software Engineer (Android) ",
      logo: 'https://cdnlogo.com/logos/g/49/grab.svg',
      location: "Bengaluru, India",
      startDate: "May 2021",
      endDate: "Oct 2021",
      description:
        "Grab being a tech giant in the South-East Asia region, had more than 100 million unique users. This scale of userbase came along with the neccessity of having a TDD (Test Driven Development). While at Grab, I worked on GrabTaxi's finance module, which was responsible to manage all of the payments on the app. Tech Stacjk used was Kotlin, RxJava, Coroutines, LiveData, Views, ViewBinding, DataBinding, Mockito, JUnit, Dagger-2, Firebase, Unit Testing, etc.",
      skills: [
        "Kotlin",
        "RxJava",
        "Coroutines",
        "LiveData",
        "Views",
        "ViewBinding",
        "DataBinding",
        "Mockito",
        "JUnit",
        "Dagger-2",
        "Firebase",
        "Unit Testing",
        "CI/CD",
      ],
      achievements: [
        "Contributed towards the payments flow of the GrabTaxi app. Worked on implementing new features, bug fixes and developing new screens for the app using the given Figma files.",
        "Wrote unit tests for the existing codebase as well as the new implementations, to ensure the quality and reliability of the app.",
      ],
    },
    {
      company: "Shipsy",
      position: "Software Engineer (Android)",
      logo: 'https://images.g2crowd.com/uploads/product/image/social_landscape/social_landscape_ae30557216c856b0f9d54afa554175a5/shipsy-shipsy.png',
      location: "Gurugram, India",
      startDate: "Aug 2019",
      endDate: "May 2021",
      description:
        "Shipsy is a SaaS based company, which was responsible for providing the Logistics and Supply Chain Management solutions to their clients. Worked on a 4 android apps, majorly focussed on Java, Kotlin, Views, and MVVM architecture.",
      skills: [
        "Java",
        "Kotlin",
        "Views",
        "MVVM",
        "Coroutines",
        "RoomDB",
        "Retrofit",
        "Firebase",
        "Dagger-2",
        "Git"
      ],
      achievements: [ 
        "Contributed towards the development of 2 android app. Migrated the existing codebase from Java to Kotlin nad AndroidX, and refactored the code to follow the MVVM architecture.",
        "Worked on implementing new features, fixing bugs and creating new screens for new functionalities/modules.",
        "Built two new apps from scratch, architectured data flow and UI flow for these two apps keeping in mind APK size and app performance on low end devices, built the app using MVVM architecture",
        "Led a team of 3 android developers to work on the 2 newly created apps. Maintained and led all the dev efforts on these two apps.",
      ],
    },
    {
      company: "Siemens",
      position: "Software Engineering Intern (Android)",
      logo: 'https://www.mulesoft.com/sites/default/files/2018-10/siemens_logo.png',
      location: "Bengaluru, India",
      startDate: "Dec 2018",
      endDate: "Jun 2019",
      description:
        "Built an entirely new app using Java and Views. Implemented Object detection and tracking in the app. Idea was to capture the number of vehicles passing by from a live camera feed of android devices.",
      skills: [
        "Java",
        "Views",
        "TensorflowLite",
        "YoloV3",
        "IoU Tracking",
        "Python",
        "Git",
        "Deep Learning",
        "PyTorch",
        "Keras"
      ],
      achievements: [
        "Built an app which was capable of detecting and tracking objects in real time using the camera feed of the device.",
        "Used YoloV3 model as a starting point, retrained the fully connected layers of the model only on vehicle data. This style transfer mechanism was used to increase the accuracy of the model. Converted the model to a protobuf file and used it in the app.",
        "Used IoU as the tracking algorithm to track the objects in the camera feed. Tracking was an important part of the project, as the app was supposed to count the number of distinct vehicles passing by. Tracking enabled us to omit the duplicate count in two consecutive frames",
        "Initially without optimisations to the app, the counting module was only able to process 3-4 frames per second. After optimising the app and the model, the app was able to process 22 frames per second. (Benchmarked on a Xiaomi Poco F1)",
      ],
    },
    {
      company: "Digital Impact Square",
      position: "Software Engineering Intern (Android)",
      logo: 'https://dextroware.b-cdn.net/wp-content/uploads/2021/09/didq-logo@2x.png',
      location: "Nashik, India",
      startDate: "May 2018",
      endDate: "Jul 2018",
      description:
        "Worked on an app using Java and Views. Idea was to capture the driveing behaviour of drivers and assess it using a scoring system. The app was supposed to capture the speed, acceleration, braking, and other parameters of the driver and then calculate a score based on these parameters.",
      skills: [
        "Java",
        "Views",
        "Firebase",
        "Activity Recognition API",
        "Python",
        "Git",
        "Android Studio",
        "Gradle",
      ],
      achievements: [
        "Rover app captured the driving behaviour by using Google's Activity Recognition API and the device's sensor data (accelerometer, gyroscope, etc.). Events like sudden acceleration, sudden braking, and sharp turns were captured using the sensor data.",
        "This captured data was then stored in Firebase and was used to calculate the driving score of the driver. The idea was implement a gamification system to encourage the drivers to drive safely.",
      ],
    },
  ],
  remoteExperience: [
    {
      company: "Geeks for Geeks",
      position: "Course Instructor",
      logo: 'https://geeksforgeeks.zohorecruit.in/recruit/viewCareerImage.do?page_id=61093000000211152&type=logo&file_name=GG_Logo.png',
      location: "Remote",
      startDate: "Jun 2024",
      endDate: "Aug 2024",
      description:
        "Tutored and mentored a group of students in a 4-month course on Android Development. The course covered basics to advanced topics in Android development, starting from the basics of Java, Kotlin and Views, to more complex topics like MVVM architecture, Coroutines, Dagger-Hilt, Jetpack Compose, and more.",
      skills: [
        "Java",
        "Kotlin",
        "OOPS",
        "Multithreading",
        "Coroutines",
        "MVVM",
        "Dagger-Hilt",
        "Jetpack Compose",
        "RoomDB",
        "Retrofit",
        "Firebase",
        "Gradle",
        "Git",
      ],
      achievements: [
        "[PHASE 1] Built a basic Calculator app using Kotlin and Views. Taught about data classes, OOPS concepts, ViewBinding, DataBinding, and Gradle.",
        "[PHASE 2] Built a Todo List app using Kotlin, and Views. Tought about Coroutines, Dagger-Hilt, RoomDB, authentication using Firebase and Jetpack's Datastore in Android",
        "[PHASE 3] Built a Social Media app using Kotlin, Views and MVVM architecture. Taught about Jetpack Compose, Coroutines, Dagger-Hilt, RoomDB, Retrofit, Firebase and Firestore in Android.",
      ],
    },
    {
      company: "Udacity",
      position: "Student Mentor and Project Reviewer",
      logo: 'https://www.doit.com/wp-content/uploads/2021/01/udacity-logo.png',
      location: "Remote",
      startDate: "Apr 2022",
      endDate: "Feb 2024",
      description:
        "Mentored and reviewed projects for students enrolled in the Deep Learning Nanodegree program. Provided feedback on projects, helped students with their doubts and queries, and guided them in their learning journey.",
      skills: [
        "Deep Learning",
        "Python",
        "PyTorch",
        "Keras",
        "Tensorflow",
        "CNNs",
        "GANs",
        "RNNs",
        "LLMs",
        "Reinforcement Learning",
      ],
      achievements: [
        "Reviewed and provided feedback on Deep Learning projects submitted by students",
        "Mentored students in their learning journey, helped them create a study plan and provided them with the necessary resources to complete their projects and helped them with their doubts and queries.",
      ],
    },
  {
      company: "Nutrition Tracking App",
      position: "Android Developer (Freelance Project)",
      logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e6/Eo_circle_teal_white_letter-n.svg/1024px-Eo_circle_teal_white_letter-n.svg.png',
      location: "Remote",
      startDate: "Feb 2025",
      endDate: "Feb 2025",
      description:
        "This was a freelance project, where the requirement to build the UI module of a nutrition tracking app. The project was structured using MVVM architecture, such that its can easily incorporate business logic module later without the need of any major changes to the UI module",
      skills: [
        "Kotlin",
        "Jetpack Compose",
        "MVVM",
        "Coroutines",
        "Dagger-Hilt",
        "Custom Views using Jetpack Compose",
        "Navigation Compose",
        "Single Activity Architecture",
        "Animations in Jetpack Compose",
      ],
      achievements: [
        "This app was entirely built using Jetpack Compose, and was completed in a short span of 5 days",
        "The UI was build such that it can be easily integrated with the business logic and also was entirely encapsulated by the logic and the data layers",
        "Every custom UI element was designed to be reused, to avoid any future code repitition and to make the code more readable and maintainable",
        "The app was built using the latest Jetpack Compose libraries and was tested on multiple devices and on both light and dark theme to ensure compatibility and performance.",
      ],
    },
  ],
} as const;
